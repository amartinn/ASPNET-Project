@using CasesNET.Web.ViewModels.Shared 
@model PagingViewModel
<nav aria-label="...">
    <ul class="pagination justify-content-center">
        <li class="page-item @if (!Model.HasPreviousPage) { <text>disabled</text> }">
            <a class="page-link"  asp-route-id="@this.ViewData["id"]" asp-route-page="@Model.PreviousPageNumber"  data-page="@Model.PreviousPageNumber">Previous</a>
        </li>
        @for (int i = Model.PageNumber - 4; i < Model.PageNumber; i++)
        {
            if (i > 0)
            {
                <li class="page-item"><a class="page-link" asp-route-id="@this.ViewData["id"]" asp-route-page="@i" data-page="@i">@i</a></li>
            }
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link">
                @Model.PageNumber
                <span class="sr-only">(current)</span>
            </span>
        </li>
        @for (int i = Model.PageNumber + 1; i <= Model.PageNumber + 4; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item"><a class="page-link"  asp-route-id="@this.ViewData["id"]" asp-route-page="@i"  data-page="@i">@i</a></li>
            }
        }
        <li class="page-item @if (!Model.HasNextPage) { <text>disabled</text> }">
            <a class="page-link"  asp-route-id="@this.ViewData["id"]"  data-page="@Model.NextPageNumber">Next</a>
        </li>
    </ul>
</nav>
<script>
    document.addEventListener('DOMContentLoaded', function () {
            var itemId = "@this.ViewData["id"]";
            var prefix = "@Model.FriendlyUrlPrefix";
            var name = "@Model.FriendlyUrlName";
        if (prefix) {
            $('.page-link').click(function (e) {
                var pageNumber = +$(this).attr('data-page');
                var url = `/${prefix}/${name}?id=${itemId}&page=${pageNumber}`
                console.log(url);
                $(this).attr('href', url);
            })
        }
    })
</script>